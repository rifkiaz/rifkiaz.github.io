<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial on Coretan dan Catatan Oprek</title>
    <link>https://blog.rifkiaz.web.id/kategori/tutorial/</link>
    <description>Recent content in tutorial on Coretan dan Catatan Oprek</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 20 Oct 2020 18:28:12 +0700</lastBuildDate>
    
	<atom:link href="https://blog.rifkiaz.web.id/kategori/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Membuat Docker Alert</title>
      <link>https://blog.rifkiaz.web.id/posts/buatdockeralert/</link>
      <pubDate>Tue, 20 Oct 2020 18:28:12 +0700</pubDate>
      
      <guid>https://blog.rifkiaz.web.id/posts/buatdockeralert/</guid>
      <description>Pendahuluan Container, ya sebuah istilah yang sedang populer pada era saat ini. dan saya pun memakainya baik untuk development aplikasi ataupun production. Namun beberapa hari belakangan ini tim saya mengalami kendala yakni sekitar 1-2 hari semua container yang berada di VM production berhenti secara tiba. Setelah diteliti hal ini disebabkan oleh docker daemon yang restart tanpa disuruh (asli bikin kesel). Dan kesalahan dari tim DevOps ialah tidak menambahkan parameter restart: always ketika production, jadilah ketika daemon docker restart dan container tidak me-restart otomatis. Yang lebih gak enak lagi ialah para client yang lebih dulu tau ketimbang tim DevOps. Karena itu pada tulisan kali ini saya akan membagi sedikit tips yang dibantu oleh Kang Mustapha untuk monitoring container docker dan mengirimkan alert ke Telegram apabila ada container yang mati (exited).</description>
    </item>
    
    <item>
      <title>Install POWERDNS di Ubuntu 18.04</title>
      <link>https://blog.rifkiaz.web.id/posts/install-powerdns-di-ubuntu-18.04/</link>
      <pubDate>Mon, 14 Sep 2020 11:29:13 +0700</pubDate>
      
      <guid>https://blog.rifkiaz.web.id/posts/install-powerdns-di-ubuntu-18.04/</guid>
      <description>POWERDNS adalah DNS Server berbasis MySQL, yang ditulis dalam C ++ dan berlisensi Under GPL. PowerDNS dapat dikelola melalui web base interface (PowerAdmin). Pada tutorial kali ini akan membahas bagaimana menginstall dan mengkonfigurasi POWERDNS pada Ubuntu 18.04.
Persiapan  Ubuntu 18.04 Domain  Tahap Instalasi  Update repositori pada Ubuntu 18.04 sudo apt update  Install MariaDB sudo apt install mariadb-server mariadb-client -y mysql_secure_installation  Edit konfigurasi pada MariaDB vim /etc/mysql/mariadb.conf/50-server.cnf ........ bind = 0.0.0.0 ----&amp;gt; ganti dengan ip lokal ........  Restart MariaDB sudo systemctl restart mariadb  Buat database pada database sudo mysql -u root -p CREATE DATABASE powerdns CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; GRANT ALL ON powerdns.</description>
    </item>
    
    <item>
      <title>Setting Konfigurasi HAProxy Di OPNsense</title>
      <link>https://blog.rifkiaz.web.id/posts/setting-konfigurasi-haproxy-di-opnsense/</link>
      <pubDate>Mon, 24 Aug 2020 13:55:51 +0700</pubDate>
      
      <guid>https://blog.rifkiaz.web.id/posts/setting-konfigurasi-haproxy-di-opnsense/</guid>
      <description>OPNsense adalah proyek firewall berbasis open source berbasis FreeBSD OPNsense.
 Berikut adalah tutorial untuk mengkonfigurasi HAProxy di OPNsense.
1. Konfigurasi Firewall untuk HAProxy  Buat 2 IP Forward pada konfigurasi firewall  Firewall &amp;gt; NAT &amp;gt; Port Forward &amp;gt; + New Rule    Interface : LAN TCP/IP Ver : IPv4 Protocol : TCP Source : any Destination port range : From - HTTP , to - HTTP Redirect target IP : #IPADDRESSOPNSENSE Redirect target port : HTTP SAVE Interface : LAN TCP/IP Ver : IPv4 Protocol : TCP Source : any Destination port range : From - HTTPS , to - HTTPS Redirect target IP : #IPADDRESSOPNSENSE Redirect target port : HTTP SAVE Buat Rule Floating  Firewall &amp;gt; Rules Floating &amp;gt; + New Rule    Action : Pass Interface : LAN Direction : in TCP/IP ver : IPv4 Protocol : TCP Source : any Destination : Lan Address Destination port range : From - HTTP , to - HTTP Action : Pass Interface : LAN Direction : in TCP/IP ver : IPv4 Protocol : TCP Source : any Destination : Lan Address Destination port range : From - HTTPS , to - HTTPS 2.</description>
    </item>
    
    <item>
      <title>Membuat Blog Sederhana Dengan Hugo</title>
      <link>https://blog.rifkiaz.web.id/posts/membuat-blog-sederhana-dengan-hugo/</link>
      <pubDate>Wed, 27 May 2020 19:40:22 +0700</pubDate>
      
      <guid>https://blog.rifkiaz.web.id/posts/membuat-blog-sederhana-dengan-hugo/</guid>
      <description>Kenapa Hugo? Pertanyaan ini pasti muncul ketika melihat tulisan ini, kenapa mesti Hugo? apa hebatnya? kn ada wordpress dan blogger dan lain - lain, okelah jika dibandingkan dengan CMS tersebut web statis seperti Hugo ini tidak kalah powerful, tapi saya punya beberapa kendala ketika menggunakan wordpress, antara lain :
 Size storage di hosting saya sangat kecil (maklum belom jadi sultan), sehingga ketika mau upload gambar mesti mikir - mikir dulu beberapa parameter seperti size dan lain - lain. Kalau tidak ada Internet mau kustomisasi blog susah, ya walaupun kadang tinggal install LAMPP atau XAMPP si, tapi menurut saya hal tersebut mulai agak ribet.</description>
    </item>
    
    <item>
      <title>Install Hugo di openSUSE Tumbleweed</title>
      <link>https://blog.rifkiaz.web.id/posts/install-hugo-di-opensuse-tumbleweed/</link>
      <pubDate>Tue, 19 May 2020 08:52:01 +0700</pubDate>
      
      <guid>https://blog.rifkiaz.web.id/posts/install-hugo-di-opensuse-tumbleweed/</guid>
      <description>Pengenalan Hugo merupakan sebuah generator web statis seperti Hexo, Hugo ditulis menggunakan bahasa Golang sehingga load page lebih cepat dibanding dengan Hexo. Oh ya kebetulan website ini menggunakan Hugo loh.
Install dependensi Sebelum menginstall Hugo pada openSUSE Tumbeleweed yang harus dilakukan adalah menginstall beberapa dependensi diantaranya adalah:
 Go Git Hugo  sudo zypper in go git wget -c https://github.com/gohugoio/hugo/releases/download/v0.71.0/hugo_0.71.0_Linux-64bit.tar.gz tar -xvf hugo_0.71.0_Linux-64bit.tar.gz sudo mv hugo /usr/local/bin Cek Versi Hugo hugo version Jika sudah berhasil terinstall akan menampilkan output seperti berikut :
Hugo Static Site Generator v0.71.0-06150C87 linux/amd64 BuildDate: 2020-05-18T16:08:02Z Selesai ~
Nantikan untuk update selanjutnya perihal konfigurasi Hugo dan command - command sederhana untuk membuat post dan menerapkan tema ya ~</description>
    </item>
    
  </channel>
</rss>